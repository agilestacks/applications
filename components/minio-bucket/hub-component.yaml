version: 1
kind: component
meta:
  name: minio-bucket
  brief: S3 bucket backed by minio
  source:
    dir: ../../components/minio-bucket

requires:
  - kubernetes
  # - ingress
provides:
  - bucket

lifecycle:
  verbs: [deploy, undeploy]
  # bare: allow

parameters:
- name: component.ingress.protocol
  env: INGRESS_PORTOCOL
- name: dns.domain
  brief: DNS domain
  env: DOMAIN_NAME
- name: component.bucket
  parameters:
  - name: name
    kind: user
    value: default
    env: BUCKET
  - name: endpoint
    env: ENDPOINT
  - name: secret.namespace
    value: minio
    env: NAMESPACE
  - name: secret.name
    value: minio
    env: SECRET_NAME
  - name: secret.accessKeyRef
    value: accesskey
    env: ACCESS_KEY_REF
  - name: secret.secretKeyRef
    value: secretkey
    env: SECRET_KEY_REF
  - name: event.arn
    value:
    empty: allow
    env: EVENT_ARNS
  - name: event.prefix
    empty: allow
    env: EVENT_PREFIX
  - name: event.suffix
    empty: allow
    env: EVENT_SUFFIX
  - name: event.name
    value: put,delete,get
    env: EVENT_NAME
    empty: allow

templates:
  files:
  - "*.template"

outputs:
- name: component.bucket.name
  value: ${component.bucket.name}
- name: component.bucket.endpoint
  value: ${component.bucket.endpoint}
- name: component.bucket.secret.namespace
  value: ${component.bucket.secret.namespace}
- name: component.bucket.secret.name
  value: ${component.bucket.secret.name}
- name: component.bucket.secret.accessKeyRef
  value: ${component.bucket.secret.accessKeyRef}
- name: component.bucket.secret.secretKeyRef
  value: ${component.bucket.secret.secretKeyRef}
