apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: s3fs
  labels:
    provider: agilestacks.com
    project:  kubeflow
    app:      s3fs
    bucket:   default
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      name: s3fs
      labels:
        provider: agilestacks.com
        project:  kubeflow
        app:      s3fs
        bucket:   default
    spec:
      containers:
      - name: s3fs
        image: agilestacks/s3fs
        imagePullPolicy: Always
        ports:
          - name: nfs
            containerPort: 2049
          # - name: mountd
          #   containerPort: 20048
          - name: rpcbind
            containerPort: 111
        env:
        - name: NFS_SERVER
          value: '1'
        - name: S3_ENDPOINT
          value: https://dev4-minio.app.dev4.demo10.superhub.io
        - name: S3_BUCKET
          value: default
        - name: AWSACCESSKEYID
          value: admin
            # valueFrom:
            #   secretKeyRef:
            #     name: s3fs-secret
            #     key: aws-key
        - name: AWSSECRETACCESSKEY
          value: Admin12345
            # valueFrom:
            #   secretKeyRef:
            #     name: s3fs-secret
            #     key: aws-secret-key
        volumeMounts:
        - name: devfuse
          mountPath: /dev/fuse
        - name: data
          mountPath: /data
        securityContext:
          privileged: true
          capabilities:
            add: ["MKNOD", "SYS_ADMIN"]
      # - name: nfs
      #   image: itsthenetwork/nfs-server-alpine
      #   env:
      #   - name: SHARED_DIRECTORY
      #     value: /data2
      #   # image: k8s.gcr.io/volume-nfs:0.8
      #   ports:
      #     - name: nfs
      #       containerPort: 2049
      #     - name: mountd
      #       containerPort: 20048
      #     - name: rpcbind
      #       containerPort: 111
      #   securityContext:
      #     privileged: true
      #     capabilities:
      #       add: ["SYS_ADMIN", "SETPCAP"]
      #   volumeMounts:
      #   - mountPath: /data3
      #     name: data
      #   - mountPath: /data2
      #     name: data
      #     # - mountPath: /exports
      #     #   name: data
      terminationGracePeriodSeconds: 30
      restartPolicy: Always
      volumes:
      - name: devfuse
        hostPath:
          path: /dev/fuse
      - name: data
        emptyDir: {}
      - name: data2
        emptyDir: {}
---
kind: Service
apiVersion: v1
metadata:
  name: nfs-bucket
  annotations:
    getambassador.io/config: |-
      ---
      apiVersion: ambassador/v0
      kind:  Mapping
      name: nfs-bucket-mapping
      prefix: /nfs/
      service: nfs-bucket.kubeflow
spec:
  type: ClusterIP
  clusterIP: 10.3.171.111
  ports:
  - name: nfs
    port: 2049
  - name: mountd
    port: 20048
  - name: rpcbind
    port: 111
    protocol: UDP
  selector:
    provider: agilestacks.com
    project:  kubeflow
    app:      s3fs
    bucket:   default
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: nfs-bucket
#   labels:
#     provider: agilestacks.com
#     project:  kubeflow
#     app:      s3fs
#     bucket:   default
#     storage:  nfs
# spec:
#   capacity:
#     storage: 10Gi
#   accessModes:
#   - ReadWriteOnce
#   nfs:
#     server: 10.3.171.112
#     # server: nfs-bucket.kubeflow.svc.cluster.local
#     path: "/"
#   mountOptions:
#     - hard
#     - nfsvers=4.1
#   persistentVolumeReclaimPolicy: "Delete"
# ---
# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: nfs-bucket
#   labels:
#     provider: agilestacks.com
#     project:  kubeflow
#     app:      s3fs
#     bucket:   default
# spec:
#   storageClassName: ""
#   selector:
#     matchLabels:
#       provider: agilestacks.com
#       project:  kubeflow
#       app:      s3fs
#       bucket:   default
#       storage:  nfs
#   accessModes:
#   - ReadWriteOnce
#   resources:
#     requests:
#       storage: 10Gi