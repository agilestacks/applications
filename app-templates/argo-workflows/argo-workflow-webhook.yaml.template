apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: wat-${application.name}-${application.uuid}
  namespace: ${application.namespace}
  labels:
    sensors.argoproj.io/controller-instanceid: axis
spec:
  repeat: true
  signals:
  - name: wat-${application.name}-${application.webhook.name}-webhook
    webhook:
      endpoint: /webhooks/${application.webhook.name}
      method: ${application.webhook.method}
  # - name: wat-${application.name}-${application.source.bucket.name}-bucketevent
  #   artifact:
  #     s3:
  #       bucket: ${application.source.bucket.name}
  #       endpoint: ${application.source.bucket.endpoint}
  #       event: s3:ObjectCreated:Put
  #       insecure: true
  #       accessKey:
  #         key: ${application.source.bucket.secret.accessKeyRef}
  #         name: ${application.source.bucket.secret.name}
  #       secretKey:
  #         key: ${application.source.bucket.secret.secretKeyRef}
  #         name: ${application.source.bucket.secret.name}
  #     target:
  #       type: nats
  #       url: nats://${component.nats.fqdn}
  #       attributes:
  #         subject: bucketevents
  triggers:
  - name: wat-${application.name}-${application.webhook.name}-trigger
    resource:
      namespace: ${application.namespace}
      group: argoproj.io
      version: v1alpha1
      kind: Workflow
      source:
        inline: |
          apiVersion: argoproj.io/v1alpha1
          kind: Workflow
          metadata:
            generateName: wat-${application.name}-webhook-
          spec:
            entrypoint: ffmpeg
            templates:
            - name: toolbox
              container:
                image: "${component.docker.image}"
                command:
                - echo
                args:
                - hello, world
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: wat-${application.name}-webhook
  namespace: ${application.namespace}
  labels:
    provider:  agilestacks.com
    application: ${application.name}
  annotations:
    agilestacks.com/stack-component: ArgoWorkflows
spec:
  rules:
  - host: ${application.name}.${component.ingress.fqdn}
    http:
      paths:
      - path: /webhooks/${application.webhook.name}
        backend:
          serviceName: ${component.argo.events.webhook.service.name}
          servicePort: ${component.argo.events.webhook.service.port}
