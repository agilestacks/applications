apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: ${application.name}-webhook
  namespace: ${application.namespace}
  labels:
    provider:  agilestacks.com
    application: ${application.name}
    sensors.argoproj.io/controller-instanceid: axis
spec:
  signals:
  - name: webhook
    webhook:
      endpoint: /webhooks/${application.name}/${application.webhook}
      method: POST
  triggers:
  - name: exec-{app.argo.name}
    resource:
      namespace: ${component.argo.namespace}
      group: argoproj.io
      version: v1alpha1
      kind: Workflow
      source:
        inline: |
          apiVersion: argoproj.io/v1alpha1
          kind: Workflow
          metadata:
            generateName: {component.argo.sensor.name}0-
          spec:
            entrypoint: ffmpeg
            templates:
            - name: toolbox
              container:
                image: "${component.docker.image}"
                command:
                - ffmpeg
                args:
                - deploy
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${application.name}-${application.webhook}
  namespace: ${application.namespace}
  labels:
    provider:  agilestacks.com
    application: ${application.name}
  annotations:
    agilestacks.com/stack-component: ArgoWorkflows
spec:
  rules:
  - host: ${component.argo.ingress}
    http:
      paths:
      - path: /webhooks/${application.name}/${application.webhook}
        backend:
          serviceName: ${component.argo.events.webhook.service.name}
          servicePort: ${component.argo.events.webhook.service.port}
