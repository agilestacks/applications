---
version: 1
kind: application
meta:
  name: argo-workflows:1
  brief: >
    Argo worfklow application with minio bucket trigger and a GitHub
  source:
    repoUrl: https://github.com/agilestacks/applications.git
    repoPath: applications/app-templates
    dir: .
    branch: master
    fromEnv: GITHUB_TOKEN

components: []

lifecycle:
  bare: allow
  verbs: [deploy, undeploy]

parameters:
- name: application
  parameters:
  - name: name
    value: antonargo1
    env: APPLICATION
  - name: webhook.name
    value: wat
  - name: webhook.method
    value: POST
  - name: webhook.enable
    value: false
    env: ENABLE_WEBHOOK
  - name: bucketEvents.enable
    value: true
    env: ENABLE_BUCKET_EVENTS
  - name: namespace
    value: argoproj
    env: NAMESPACE
  - name: secret.name
    value: ${application.name}-app
    env: APP_SECRET
    kind: link
  - name: docker.image
    value: ${component.docker.image}
    kind: link
- name: dns.domain
  env: DOMAIN_NAME
- name: component.argo
  parameters:
  - name: namespace
  - name: ingress
  - name: events.webhook.service.name
  - name: events.webhook.service.port
- name: component.ingress
  parameters:
  - name: protocol
  - name: urlPrefix
  - name: fqdn
- name: component.buildbox
  parameters:
  - name: directory
    value: .
  - name: dockerfile
    value: Dockerfile

- name: application.target.bucket
  kind: link
  parameters:
  - name: name
    value: ${target-bucket:component.bucket.name}
  - name: endpoint
    value: ${target-bucket:component.bucket.endpoint}
    env: SRC_BUCKET_ENDPOINT
  - name: secret.name
    value: ${target-bucket:component.bucket.secret.name}
    env: SRC_BUCKET_SECRET_NAME
  - name: secret.accessKeyRef
    value: ${target-bucket:component.bucket.secret.accessKeyRef}
    env: SRC_BUCKET_ACCESSKEY
  - name: secret.secretKeyRef
    value: ${target-bucket:component.bucket.secret.secretKeyRef}
    env: SRC_BUCKET_SECRETKEY

- name: application.source.bucket
  kind: link
  parameters:
  - name: name
    value: ${source-bucket:component.bucket.name}
  - name: endpoint
    value: ${source-bucket:component.bucket.endpoint}
    env: DEST_BUCKET_ENDPOINT
  - name: secret.name
    value: ${source-bucket:component.bucket.secret.name}
    env: DEST_BUCKET_SECRET_NAME
  - name: secret.accessKeyRef
    value: ${source-bucket:component.bucket.secret.accessKeyRef}
    env: DEST_BUCKET_ACCESSKEY
  - name: secret.secretKeyRef
    value: ${source-bucket:component.bucket.secret.secretKeyRef}
    env: DEST_BUCKET_SECRETKEY
  - name: prefix
    value: ""
    empty: allow
    kind: user
  - name: suffix
    value: ""
    empty: allow
    kind: user

outputs:
- name: application.webhook.url
  value: ${application.name}.${component.ingress.fqdn}/webhooks/${application.webhook.name}
- name: application.git.remote
- name: application.webhook.method

templates:
  files:
    - "*.template"
    - "gateways/*.template"
    - "sensors/*.template"
    - "workflows/*.template"

