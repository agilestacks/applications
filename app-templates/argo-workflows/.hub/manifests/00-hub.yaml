---
version: 1
kind: application
meta:
  name: argo-workflows:1
  brief: >
    Argo worfklow application with minio bucket trigger
  source:
    repoUrl: https://github.com/agilestacks/applications.git
    repoPath: applications/app-templates
    dir: .
    branch: APPLICATIONS_TAG
    fromEnv: GITHUB_TOKEN

components: []

lifecycle:
  bare: allow
  verbs: [deploy, undeploy]

parameters:
- name: application
  parameters:
  - name: name
  - name: webhook.name
    value: wat
  - name: webhook.method
    value: POST
  - name: webhook.enable
    value: false
    env: ENABLE_WEBHOOK
  - name: bucketEvents.enable
    value: true
    env: ENABLE_BUCKET_EVENTS
  - name: namespace
    value: ${component.argo.namespace}
    env: NAMESPACE
    kind: link
  - name: secret.name
    value: ${application.name}-app
    env: APP_SECRET
    kind: link
  - name: docker.image
    value: ${component.docker.image}
    kind: link
  - name: name.technical
    kind: link
    value: ${application.name}
    env: APPLICATION

- name: dns.domain
  env: DOMAIN_NAME

- name: component.argo
  parameters:
  - name: namespace
  - name: ingress
  - name: events.webhook.service.name
  - name: events.webhook.service.port

- name: component.ingress
  parameters:
  - name: protocol
  - name: urlPrefix
  - name: fqdn

- name: component.buildbox
  parameters:
  - name: name
    value: bb-${application.name}
    kind: link
  - name: directory
    value: .
  - name: dockerfile
    value: Dockerfile
  - name: timeout
    value: 900
    env: TIMEOUT

outputs:
- name: application.webhook.url
  value: ${component.ingress.protocol}://${application.name}.${component.ingress.fqdn}/webhooks/${application.webhook.name}
- name: application.git.remote
- name: application.webhook.method

templates:
  files:
    - "*.template"
    - "../gateways/*.template"
    - "../sensors/*.template"
    - "../workflows/*.template"
