---
version: 1
kind: application
meta:
  name: argo-workflows:1
  brief: >
    Argo worfklow application with minio bucket trigger and a GitHub
  source:
    dir: .

components:
- name: ecr
  source:
    dir: ../../../../components/ecr
- name: github-repository
  source:
    dir: ../../../components/github-repository
- name: buildbox
  source:
    dir: ../../../components/buildbox
- name: source-bucket
  source:
    dir: ../../../components/minio-bucket
- name: target-bucket
  source:
    dir: ../../../components/minio-bucket

lifecycle:
  bare: allow
  verbs: [deploy, undeploy]
  order:
    - ecr
    - github-repository
    - buildbox
    # - github-webhook
    - source-bucket
    - target-bucket
    # - argo-sensor-artifact
  mandatory:
    - ecr
    - github-repository
    - buildbox
    # - github-webhook
    - source-bucket
    - target-bucket
    # - argo-sensor-artifact

parameters:
- name: cloud.region
  value: us-east-1
- name: application
  parameters:
  - name: name
    value: antonargo1
    env: APPLICATION
  - name: webhook.name
    value: wat
  - name: webhook.method
    value: POST
  - name: webhook.enable
    value: true
    env: ENABLE_WEBHOOK
  - name: bucketEvents.enable
    value: true
    env: ENABLE_BUCKET_EVENTS
  - name: namespace
    value: argoproj
    env: NAMESPACE
  - name: secret.name
    value: ${application.name}-app
    env: APP_SECRET
    kind: link
  - name: docker.image
    value: ${component.docker.image}
    kind: link

- name: dns.domain
  env: DOMAIN_NAME
- name: terraform.bucket
  parameters:
  - name: name
  - name: region
- name: component.ingress
  parameters:
  - name: protocol
  - name: urlPrefix
  - name: fqdn

- name: component.nats.fqdn
# - name: component.minio
#   parameters:
#   - name: service.host
#   - name: service.port
# - name: component.minio
#   parameters:
#   - name: endpoint
#   - name: endpoint.ingress
#   - name: namespace
#   - name: secret.name
#   - name: secret.accessKeyRef
#   - name: secret.secretKeyRef

- name: component.bucket
  component: source-bucket
  parameters:
  - name: endpoint
  - name: name
    value: ${application.name}-input
  - name: namespace
  - name: secret.name
  - name: secret.namespace
  - name: secret.accessKeyRef
  - name: secret.secretKeyRef
- name: component.bucket
  component: target-bucket
  parameters:
  - name: endpoint
  - name: name
    value: ${application.name}-output
  - name: namespace
  - name: secret.name
  - name: secret.namespace
  - name: secret.accessKeyRef
  - name: secret.secretKeyRef

- name: application.target.bucket
  kind: link
  parameters:
  - name: name
    value: ${target-bucket:component.bucket.name}
  - name: endpoint
    value: ${target-bucket:component.bucket.endpoint}
    env: SRC_BUCKET_ENDPOINT
  - name: secret.name
    value: ${target-bucket:component.bucket.secret.name}
    env: SRC_BUCKET_SECRET_NAME
  - name: secret.accessKeyRef
    value: ${target-bucket:component.bucket.secret.accessKeyRef}
    env: SRC_BUCKET_ACCESSKEY
  - name: secret.secretKeyRef
    value: ${target-bucket:component.bucket.secret.secretKeyRef}
    env: SRC_BUCKET_SECRETKEY

- name: application.source.bucket
  kind: link
  parameters:
  - name: name
    value: ${source-bucket:component.bucket.name}
  - name: endpoint
    value: ${source-bucket:component.bucket.endpoint}
    env: DEST_BUCKET_ENDPOINT
  - name: secret.name
    value: ${source-bucket:component.bucket.secret.name}
    env: DEST_BUCKET_SECRET_NAME
  - name: secret.accessKeyRef
    value: ${source-bucket:component.bucket.secret.accessKeyRef}
    env: DEST_BUCKET_ACCESSKEY
  - name: secret.secretKeyRef
    value: ${source-bucket:component.bucket.secret.secretKeyRef}
    env: DEST_BUCKET_SECRETKEY
  - name: prefix
    value: ""
    empty: allow
    kind: user
  - name: suffix
    value: ""
    empty: allow
    kind: user

# - name: source-bucket:component.bucket.name
# - name: source-bucket:component.bucket.endpoint
# - name: source-bucket:component.bucket.secret.name
# - name: source-bucket:component.bucket.secret.accessKeyRef
# - name: source-bucket:component.bucket.secret.secretKeyRef


# - name: application.bucket.name
#   value: ${source-bucket:component.bucket.name}

# - name: component.bucket
#   component: argo-sensor-artifact
#   parameters:
#   - name: endpoint
#     value: ${component.minio.service.host}:${component.minio.service.port}

- name: component.buildbox
  parameters:
  - name: directory
    value: .
  - name: dockerfile
    value: Dockerfile

- name: component.argo
  parameters:
  - name: namespace
  - name: ingress
  - name: events.webhook.service.name
  - name: events.webhook.service.port

- name: component.git.user.name
  value: Antons Kranga
- name: component.git.user.email
  value: anton@agilestacks.com

- name: component.github
  parameters:
  - name: workspace
    value: ../../app-templates/argo-workflows
  - name: token
    fromEnv: GITHUB_TOKEN
  - name: repository.organization
    value: asibot
  - name: repository.name
    value: antonargo1
  - name: repository.description
    value: >
      Worfklow application template backed with Argo.
      Optimized to carry simulation and data science tasks
- name: component.ecr.name
  value: myargoapp.${dns.domain}
- name: component.git.remote

outputs:
- name: application.webhook.url
  value: ${application.name}.${component.ingress.fqdn}/webhooks/${application.webhook.name}
- name: application.git.remote
- name: application.webhook.method

templates:
  files:
    - "*.template"
    - "gateways/*.template"
    - "sensors/*.template"
    - "workflows/*.template"
