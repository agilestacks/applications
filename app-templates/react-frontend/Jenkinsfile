pipeline {
  triggers {
    githubPush()
    pollSCM('H/15 * * * *')
  }
  parameters {
    string( name: 'APPLICATION_NAME',
            defaultValue: "${env.JOB_BASE_NAME}",
            description: 'S3 bucket where application distribution must be published'
          )

    string( name: 'DOMAIN_NAME',
            defaultValue: "${env.DOMAIN_NAME}",
            description: 'S3 bucket where application distribution must be published'
          )
    string( name: 'STATE_FILE',
            defaultValue: 's3://terraform.agilestacks.com/antondo2.kubernetes.delivery/hub/prod/hub.state',
            description: 'Current stack state file location'
          )
  }
  agent {
    kubernetes {
      inheritFrom 'toolbox'
      label 'pod'
      containerTemplate(
        name: 'buildbox',
        image: 'node:8.11',
        ttyEnabled: true,
        command: 'cat'
      )
    }
  }
  stages {
    stage('Checkout') {
      steps {
        checkout scm
        // git credentialsId: 'asibot', url: 'https://github.com/agilestacks/applications.git'
      }
    }
    stage('Elaborate') {
      environment {
        DOMAIN_NAME      = "${params.DOMAIN_NAME}"
        APPLICATION_NAME = "${params.APPLICATION_NAME}"
      }
      steps {
        container('toolbox') {
          dir('app-templates/react-frontend') {
            sh script: "hub elaborate ./hub-application.yaml -s ${STATE_FILE} -o hub-application.elaborate"
            sh script: 'hub deploy ./hub-application.elaborate'
          }
        }
      }
    }
    stage('Build') {
      steps {
        container('buildbox') {
          dir('app-templates/react-frontend') {
            sh script: 'npm install'
            sh script: 'npm run junit:test'
            sh script: 'npm run build'
          }
        }
      }
    }
    stage('Lint') {
      steps {
        container('buildbox') {
          dir('app-templates/react-frontend') {
            script {
              try {
                sh script: 'npm run junit:lint'
              } catch (err) {
                currentBuild.result = 'UNSTABLE'
                currentBuild.description = 'Found lint violations'
              }
            }
          }
        }
      }
    }
    stage('Deploy') {
      steps {
        container('toolbox') {
          sh script: "aws s3 sync --delete dist/ s3://${params.BUCKET}/${params.CONTEXT_PATH}"
        }
      }
    }
  }
  post {
    always {
      junit testResults: './tests-junit.xml'
    }
    changed {
      slackSend color: slack.buildColor, message: slack.buildReport
    }
  }
}
