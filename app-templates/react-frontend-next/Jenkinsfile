pipeline {
  triggers {
    githubPush()
    pollSCM('H/15 * * * *')
  }
  parameters {
    string(
          name: 'AWS_TRUST_ROLE',
          defaultValue: env.DEPLOY_ROLE_ARN,
          description: "Role to assume for to deploy application"
      )
    booleanParam(
          name: 'CLEAN_WORKSPACE',
          defaultValue: false,
          description: 'Start with empty workspace'
      )
  }
  agent {
    kubernetes {
      inheritFrom 'toolbox'
      label 'pod'
      containerTemplate(
        name: 'buildbox',
        image: 'node:10.6',
        ttyEnabled: true,
        command: 'cat'
      )
    }
  }
  stages {
    stage('Init') {
      steps {
        script {
          if (params.CLEAN_WORKSPACE) {
            echo "Wiping out workspace"
            deleteDir()
          } else {
            echo 'Skipping cleanup due to user setting'
          }
        }
      }
    }
    stage('Checkout') {
      steps {
        checkout scm
      }
    }
    // stage('Deploy Components') {
    //   environment {
    //     HUB_DEBUG = '1'
    //     NAME= "${params.NAME}"
    //   }
    //   steps {
    //     container('toolbox') {
    //       script {
    //         sh 'env | sort'
    //         dir ('.hub') {
    //           sh script: 'ls -la'
    //           hub.elaborate(state: params.APP_STATE_FILE)
    //           hub.deploy()
    //         }
    //       }
    //     }
    //   }
    // }
    stage('Build') {
      environment {
        CONTEXT_PATH = "${params.INGRESS_PATH}"
        APPLICATION_REPOSITORY = "${gitscm.remote}"
        APPLICATION_BRANCH = "${gitscm.branch}"
      }
      steps {
        container('buildbox') {
          sh script: 'npm install'
          sh script: 'npm run junit:test'
          sh script: 'npm run build'
        }
      }
    }
    // stage('Lint') {
    //   steps {
    //     container('buildbox') {
    //       script {
    //         try {
    //           sh script: 'npm run junit:lint'
    //         } catch (err) {
    //           currentBuild.result = 'UNSTABLE'
    //           currentBuild.description = 'Found lint violations'
    //         }
    //       }
    //     }
    //   }
    // }
    stage('Deploy Application') {
      steps {
        container('toolbox') {
          script {
            def bucket
            def ingressPath
            dir ('.hub') {
              hub.elaborate(manifest: 'hub.yaml', state: params.APP_STATE_FILE)
              final outputs = hub.explain(manifest: 'hub.yaml', state: params.APP_STATE_FILE).stackOutputs
              bucket = outputs['application.bucket'] as String
              applicationPath = outputs['application.ingress.path'] as String
            }
            sh script: "env | sort"
            sh script: "ls -la"
            sh script: "ls -la .hub"
            withAWS(role:params.AWS_TRUST_ROLE) {
              sh script: "aws s3 sync --delete dist/ s3://${bucket}/${applicationPath}"
            }
            println params.APP_BUCKET
            print bucket
            println params.INGRESS_PATH
            println applicationPath
          }
        }
      }
    }
  }
  // post {
  //   always {
  //     junit testResults: './tests-*.xml', allowEmptyResults: true
  //   }
  //   changed {
  //     slackSend color: slack.buildColor, message: slack.buildReport
  //   }
  // }
}
