apiVersion: "machinelearning.seldon.io/v1alpha2"
kind: "SeldonDeployment"
metadata:
  name: "{{MODEL_NAME}}"
  namespace: "{{NAMESPACE}}"
  labels:
    app: "seldon"
spec:
  annotations:
    deployment_version: "{{MODEL_VERSION}}"
    project_name: "{{MODEL_NAME}}"
    # seldon.io/ambassador-config: |-
    #   ---
    #   apiVersion: ambassador/v0
    #   kind:  Mapping
    #   name: "serving-{{MODEL_NAME}}"
    #   prefix: serving/models/{{MODEL_NAME}}/
    #   rewrite: /v1/models/{{MODEL_NAME}}:predict
    #   method: POST
    #   service: "{{MODEL_NAME}}.{{NAMESPACE}}:5000"
  name: "{{MODEL_NAME}}"
  predictors:
  - annotations:
      predictor_version: "{{MODEL_VERSION}}"
    componentSpecs:
    - spec:
        containers:
        - name: "{{MODEL_NAME}}"
          image: "{{SERVING_IMAGE}}"
          imagePullPolicy: "Always"
          env:
          - name: MODEL_FILE
            value: "{{MODEL_FILE}}"
          - name: TITLE_PP_FILE
            value: "{{TITLE_PP_FILE}}"
          - name: BODY_PP_FILE
            value: "{{BODY_PP_FILE}}"
          volumeMounts:
          - mountPath: "{{MOUNT_PATH}}"
            name: "persistent-storage"
        terminationGracePeriodSeconds: 1
        volumes:
        - name: "persistent-storage"
          volumeSource:
            persistentVolumeClaim:
              claimName: "{{PVC_NAME}}"
    graph:
      children: []
      endpoint:
        type: "REST"
      name: "{{MODEL_NAME}}"
      type: "MODEL"
    name: "{{MODEL_NAME}}"
    replicas: {{REPLICAS}}
