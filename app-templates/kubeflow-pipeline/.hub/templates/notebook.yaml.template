---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/aws-ebs
  finalizers:
  - kubernetes.io/pvc-protection
  name: ${application.notebook.name}-workspace
  namespace: ${application.namespace}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: ${application.notebook.workspaceSize}
  storageClassName: kubeflow-ebs-gp2
  volumeMode: Filesystem
---
apiVersion: kubeflow.org/v1alpha1
kind: Notebook
metadata:
  labels:
    app: notebook
  name: ${application.notebook.name}
  namespace: ${application.namespace}
spec:
  securityContext:
    # this is jovyan
    runAsUser: 1000
    runAsGroup: 1000
  template:
    spec:
      initContainers:
      - name: git-clone
        image: k8s.gcr.io/git-sync:v3.1.1
        env:
        - name: GIT_SYNC_REPO
          valueFrom:
            secretKeyRef:
              name: ${component.git.secretName}
              key: clone_url
        - name: GIT_SYNC_USERNAME
          valueFrom:
            secretKeyRef:
              name: ${component.git.secretName}
              key: username
        - name: GIT_SYNC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${component.git.secretName}
              key: password
        args:
        - --branch=master
        - --wait=30
        - -one-time
        - --dest=workspace
        volumeMounts:
          - name: workspace
            mountPath: /tmp/git
      containers:
      - env: []
        image: ${application.kernel.image}
        name: ${application.notebook.name}
        resources:
          limits: {}
          requests:
            cpu: "0.5"
            memory: 1.0Gi
        volumeMounts:
        - mountPath: /home/jovyan
          name: workspace
      serviceAccountName: default-editor
      ttlSecondsAfterFinished: 300
      volumes:
      - name: workspace
        persistentVolumeClaim:
          claimName: ${application.notebook.name}-workspace
