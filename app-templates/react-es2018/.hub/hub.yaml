version: 1

kind: application
meta:
  name: 'react-es2018:1'
  brief: S3 hosted React frontend application
  source:
    dir: .
requires:
  - kubernetes
components:
  - name: s3
    source:
      dir: components/s3-website
  - name: github-repository
    source:
      dir: components/github-repository
parameters:
  - name: application.bucket
    value: '${component.s3website.bucket}'
  - name: application.description
    value: >-
      HTML5/JavaScript application that has been deployed to AWS S3 hosted
      website with Jenkins CI server
  - name: application.ingress.host
    value: '${component.s3website.name}.${dns.domain}'
  - name: application.name
    value: app-local-06
  - name: application.namespace
    value: cool
  - name: application.protocol
    value: http
  - name: application.replicas
    value: 1
  - name: application.state.file
    fromEnv: APP_STATE_FILE
  - name: application.theme
    value: khaki
  - name: application.version
    value: latest
  - name: cloud.region
    fromEnv: AWS_DEFAULT_REGION
  - name: component.docker.image
  - name: component.git.remote
  - name: component.github.repository.description
    value: |
      React frontend application
  - name: component.github.repository.name
    value: app-local-06
  - name: component.github.repository.organization
    value: asibot
  - name: component.github.token
    fromEnv: COMPONENT_GITHUB_TOKEN
  - name: component.github.webhook.events.json
    value: '["push"]'
  - name: component.github.webhook.name
    value: github
  - name: component.github.workspace
    value: ../../..
  - name: component.ingress.fqdn
  - name: component.ingress.protocol
  - name: component.jenkins.url
  - name: component.s3website.baseDomain
    value: '${dns.domain}'
  - name: component.s3website.bucket
  - name: component.s3website.endpoint
  - name: component.s3website.name
    value: app-local-06
  - name: component.s3website.path
    value: ''
  - name: dns.domain
    env: DOMAIN_NAME
  - name: terraform.bucket.name
    fromEnv: STATE_BUCKET
  - name: terraform.bucket.region
    fromEnv: STATE_REGION
outputs:
  - name: application.bucket
    value: '${component.s3website.bucket}'
  - name: application.endpoint
    value: '${component.s3website.endpoint}'
  - name: application.git.remote
    value: '${component.git.remote}'
  - name: application.docker.image
    value: '${component.docker.image}'
  - name: application.name
    value: '${application.name}'
  - name: application.namespace
    value: '${application.namespace}'
  - name: application.theme
  - name: application.fqdn
    value: '${application.ingress.host}'
  - name: application.path
    value: '${component.s3website.path}'
  - name: application.url
    value: '${application.protocol}://${application.ingress.host}/${application.path}'
  - name: application.jenkins.pipeline.url
    value: '${component.jenkins.url}/job/${application.name}-pipeline'
templates:
  files:
    - templates/*.template
lifecycle:
  order:
    - github-repository
    - s3
  bare: allow
  verbs:
    - deploy
    - undeploy