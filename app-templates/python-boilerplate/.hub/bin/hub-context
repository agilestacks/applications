#!/bin/bash -e
# shellcheck disable=SC2006,SC2016,SC2086
usage()
{
cat << EOF
Prints environment configuration for the stack

Usage: $(basename $0) -s STACK_DOMAIN [-o] [-f] [-i]

Parameters:
    -s --stack      domain name of the stack
    -f --force      overwrite context file
    -i --ignore     do not switch hub current context to new one
    -h --help       print current message
EOF
}

_HUB_CONTEXT='.hub-context'
export HUB_CONTEXT="$(pwd)/$_HUB_CONTEXT"

if test -z "$1"; then
    current="$(basename $(readlink $HUB_CONTEXT))"
    for i in $(hub-ls); do
        test "$i" = "$current" \
            && echo "* $i" \
            || echo "$i";
    done
    exit 1
fi

while [ "$1" != "" ]; do
    case $1 in
        -s | --stack )      shift
                            STACK=$1
                            ;;
        -f | --force )      FORCE=1
                            ;;
        -i | --ignore )     IGNORE=1
                            ;;
        -h | --help )       usage
                            exit
                            ;;
        - )                 STACK=$(cat /dev/stdin | xargs | cut -d " " -f1)
                            ;;
        * )                 usage
                            exit 1
    esac
    shift
done

JQ="jq -rM"

PLATFORM_CLUSTER=`hub-show -c -M -m -s $STACK`

_ENVFILE=".hub/env/$STACK"
ENVFILE="$(pwd)/$_ENVFILE"

test -z "$FORCE" || \
    rm -f $ENVFILE

_KUBECONFIG="$(dirname $_ENVFILE)/kubeconfig.$(basename $_ENVFILE).yaml"

export KUBECONFIG="$(pwd)/$_KUBECONFIG"

if test ! -f "$ENVFILE"; then
    HUB_DOMAIN_NAME=`echo $PLATFORM_CLUSTER | $JQ '.parameters.dns.domain'`
    HUB_INGRESSHOST=`echo $PLATFORM_CLUSTER | $JQ '.parameters.component.ingress.fqdn'`
    HUB_DOCKER_HOST=`echo $PLATFORM_CLUSTER | $JQ '.parameters.component.docker.auth.host'`
    HUB_DOCKER_USER=`echo $PLATFORM_CLUSTER | $JQ '.parameters.component.docker.auth.basic.username'`

    mkdir -p "$(dirname $ENVFILE)"
    cat >$ENVFILE << EOF
echo "export HUB_DOMAIN_NAME=$HUB_DOMAIN_NAME"
echo "export HUB_INGRESS_HOST=$HUB_INGRESSHOST"
echo "export HUB_DOCKER_HOST=$HUB_DOCKER_HOST"
echo "export HUB_DOCKER_USER=$HUB_DOCKER_USER"
echo "export HUB_DOCKER_PASS=Harbor12345"
echo "export SKAFFOLD_DEFAULT_REPO=$HUB_DOCKER_HOST/library"
echo "export SKAFFOLD_PROFILE=incluster"
echo "export KUBECONFIG=$KUBECONFIG"
echo "export HUB_CONTEXT=$HUB_CONTEXT"
EOF
    echo '`# hub context has been saved to '$_HUB_CONTEXT' cluster.`'
else
    echo '`# '$_HUB_CONTEXT' has been already exists. Ingoring...`'
fi

if test ! -z "$IGNORE"; then
    echo '`# hub current context has NOT been switched`'
    echo '`# to switch please run follwoing command`'
    echo
    echo '`# ln -sf "'$ENVFILE'" "'$HUB_CONTEXT'"`'
    echo
else
    ln -sf "$ENVFILE" "$HUB_CONTEXT"
    echo '`# hub current context has been switched`'
fi

hub-kubeconfig -k -s "$HUB_DOMAIN_NAME" > /dev/null || true
echo '`### kubeconfig has been saved in '$_KUBECONFIG'.`'
echo '`# to start working with '$HUB_DOMAIN_NAME' cluster run following command`'
echo
echo 'eval $(source '$_HUB_CONTEXT')'
echo
echo '`# P.S. these help texts are "eval" safe`'
