version: 1
kind: application
meta:
  name: 'spring-boot:1'
  brief: Java microservice with Spring Boot
  source:
    dir: .
requires:
  - kubernetes
components:
- name: ecr
  source:
    dir: ../../../components/ecr
- name: github-repository
  source:
    dir: ../../components/github-repository
lifecycle:
  bare: allow
  verbs:
    - deploy
    - undeploy
  order:
    - ecr
    - github-repository
  mandatory:
    - ecr
    - github-repository
parameters:
  - name: application.name
    fromEnv: APP_NAME
  - name: application.description
    value: Java applciation
  - name: component.github.repository.name
    value: ${application.name}
  - name: component.github.repository.organization
    value: asibot
  - name: component.ecr.name
    value: '${dns.domain}/${application.name}'
  - name: component.git.remote
  - name: component.github.token
    fromEnv: GITHUB_TOKEN
  - name: component.github.webhook.name
    value: github
  - name: component.github.webhook.events.json
    value: '["push"]'
  - name: component.github.repository.description
    value: >
      Worfklow application template backed with Argo. Optimized to carry
      simulation and data science tasks
  - name: dns.domain
    env: DOMAIN_NAME
  - name: cloud.region
  - name: terraform.bucket.name
  - name: terraform.bucket.region
  - name: application.namespace
    value: default
  - name: application.replicas
    value: 1
  - name: application.version
    value: latest
  - name: application.ingress.host
    value: '${application.name}.${component.ingress.fqdn}'
  - name: application.ingress.path
    value: /
  - name: component.ingress.fqdn
  - name: platform.state.file
    fromEnv: PLATFORM_STATE_FILE
templates:
  files:
    - templates/*.template
outputs:
  - name: application.git.remote
    value: '${component.git.remote}'

